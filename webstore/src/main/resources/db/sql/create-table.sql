 DROP TABLE PRODUCTS IF EXISTS;   
 DROP TABLE ORDERS IF EXISTS;
 DROP TABLE CUSTOMER IF EXISTS;
DROP TABLE SHIPPING_DETAIL IF EXISTS;
DROP TABLE ADDRESS IF EXISTS;
DROP TABLE CART IF EXISTS
DROP TABLE CUSTOMER IF exists;
 
 CREATE TABLE PRODUCTS (  
 ID VARCHAR(25) PRIMARY KEY, 
 NAME VARCHAR(50),    
 DESCRIPTION  VARCHAR(250), 
 UNIT_PRICE DECIMAL,   
 MANUFACTURER VARCHAR(50), 
 CATEGORY VARCHAR(50),  
 CONDITN VARCHAR(50), 
 UNITS_IN_STOCK BIGINT,  
 UNITS_IN_ORDER BIGINT,   
 DISCONTINUED BOOLEAN   
 ); 
 


 
 

 CREATE TABLE CART (
ID VARCHAR(50) PRIMARY KEY
);


DROP TABLE CART_ITEM IF EXISTS;
CREATE TABLE CART_ITEM (
ID VARCHAR(75),
PRODUCT_ID VARCHAR(25),
CART_ID varchar(50),
QUANTITY BIGINT,
FOREIGN KEY(PRODUCT_ID) REFERENCES PRODUCTS(ID),
FOREIGN KEY (CART_ID) REFERENCES CART(ID),
CONSTRAINT CART_ITEM_PK PRIMARY KEY (ID,CART_ID)
);


CREATE TABLE ADDRESS (
ID INTEGER AUTO_INCREMENT PRIMARY KEY,
DOOR_NO VARCHAR(25),
STREET_NAME VARCHAR(25),
AREA_NAME VARCHAR(25),
STATE VARCHAR(25),
COUNTRY VARCHAR(25),
ZIP VARCHAR(25)
);



CREATE TABLE CUSTOMER (
ID INTEGER AUTO_INCREMENT PRIMARY KEY,
NAME VARCHAR(25),
PHONE_NUMBER VARCHAR(25),
BILLING_ADDRESS_ID INTEGER,
FOREIGN KEY (BILLING_ADDRESS_ID) REFERENCES ADDRESS(ID)
);


CREATE TABLE SHIPPING_DETAIL (
ID INTEGER  AUTO_INCREMENT PRIMARY KEY,
NAME VARCHAR(25),
SHIPPING_DATE VARCHAR(25),
SHIPPING_ADDRESS_ID INTEGER,
FOREIGN KEY (SHIPPING_ADDRESS_ID) REFERENCES ADDRESS(ID)
);


CREATE TABLE ORDERS (
ID INTEGER  AUTO_INCREMENT PRIMARY KEY,
CART_ID VARCHAR(50), 
CUSTOMER_ID INTEGER ,
SHIPPING_DETAIL_ID INTEGER,
FOREIGN KEY(CART_ID) REFERENCES CART(ID),
FOREIGN KEY(CUSTOMER_ID) REFERENCES CUSTOMER(ID),
FOREIGN KEY(SHIPPING_DETAIL_ID) REFERENCES  SHIPPING_DETAIL(ID)
);



 